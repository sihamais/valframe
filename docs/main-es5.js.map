{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/doc-form/doc-form.component.ts","webpack:///src/app/doc-form/doc-form.component.html","webpack:///src/app/home/SafeHtml.pipe.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/services/auth/auth-guard.service.ts","webpack:///src/app/services/auth/auth.service.ts","webpack:///src/app/services/data/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/models/card.model.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","pathMatch","redirectTo","routerOptions","anchorScrolling","scrollPositionRestoration","AppModule","forRoot","declarations","imports","providers","bootstrap","AuthComponent","router","authService","formBuilder","initForm","signInForm","group","email","required","password","pattern","get","value","onSignIn","DocFormComponent","cards","display","closeResult","edit","newCard","length","push","card","childs","i","splice","type","content","onAddCard","onEdit","SafeHtmlPipe","sanitizer","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","name","HomeComponent","dataService","safeHtml","firstParse","getJSON","subscribe","response","infos","error","console","log","x","key","child","extractKeys","slice","navigate","logOut","opacity","animations","AuthGuardService","providedIn","AuthService","DataService","http","jsonURL","environment","production","bootstrapModule","err","Card"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Valframe';\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  \n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routes, ExtraOptions, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { AuthService } from './services/auth/auth.service';\nimport { AuthGuardService } from './services/auth/auth-guard.service';\nimport { DataService } from './services/data/data.service';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { HomeComponent } from './home/home.component';\nimport { SafeHtmlPipe } from './home/SafeHtml.pipe';\nimport { DocFormComponent } from './doc-form/doc-form.component';\n\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent, pathMatch: 'full'},\n  { path: 'login', component: AuthComponent },\n  { path: 'newDoc', component: DocFormComponent },\n  { path: '**', redirectTo: ''}\n];  \n\nconst routerOptions: ExtraOptions = {\n  anchorScrolling: 'enabled',\n  scrollPositionRestoration: 'enabled'\n};\n\n@NgModule({\n  declarations: [\n    SafeHtmlPipe,\n    AppComponent,\n    AuthComponent,\n    HomeComponent,\n    DocFormComponent,\n  ],\n  imports: [\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(appRoutes),\n    FontAwesomeModule,\n  ],\n  providers: [\n    SafeHtmlPipe,\n    AuthService,\n    AuthGuardService,\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from '../services/auth/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  signInForm: FormGroup;\n\n  errorMessage: string;\n\n  constructor(private router: Router,\n    private authService: AuthService,\n    private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  private initForm() {\n    this.signInForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.pattern(/[0-9a-zA-Z]{6,}/)]],\n\n    })\n  }\n\n  onSignIn() {\n    const email = this.signInForm.get('email').value;\n    const password = this.signInForm.get('password').value;\n\n    // this.authService.signInUser(email, password).then(\n    //   () => { this.router.navigate(['/main']); },\n    //   (error) => { this.errorMessage = error; }\n    // )\n  }\n\n}\n","<section class=\"signin_form\">\n    <a class=\"navbar-brand\" routerLink=\"app-root\">VALFRAME</a>\n    <hr class=\"divider my-4\" />\n\n    <section class=\"container\">\n        <form [formGroup]=\"signInForm\" (ngSubmit)=\"onSignIn()\">\n            <div class=\"row justify-content-center\">\n                <div>\n                    <label class=\"text-black-75 font-weight-light mb-0\" for=\"email\">Email </label>\n                    <input type=\"email\" email=\"email\" id=\"email\" class=\"form-control form-control-lg\"\n                        placeholder=\"Your email..\" formControlName=\"email\">\n                </div>\n            </div>\n            <div class=\"row justify-content-center\">\n                <div>\n                    <label class=\"text-black-75 font-weight-light mb-0\" for=\"password\">Password </label>\n                    <input type=\"password\" name=\"password\" class=\"form-control form-control-lg\" id=\"password\"\n                        placeholder=\"Your password..\" formControlName=\"password\">\n                </div>\n            </div>\n            <p class=\"text-danger\">{{ errorMessage }}</p>\n            <div class=\"row justify-content-center signin_bloc\">\n                <input type=\"submit\" value=\"Log in\" class=\"btn btn-primary btn-xl js-scroll-trigger mb-4 signinbtn\"\n                    [disabled]=\"signInForm.invalid\">\n            </div>\n        </form>\n    </section>\n\n    <section class=\"col-sm\">\n        <p class=\"text\">\n            <a routerLink=\"\" class=\"lien_forgotPass\">Forgot your password?</a>\n    </section>\n    \n</section>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Card } from 'src/models/card.model';\n\n@Component({\n  selector: 'app-doc-form',\n  templateUrl: './doc-form.component.html',\n  styleUrls: ['./doc-form.component.scss']\n})\nexport class DocFormComponent implements OnInit {\n  cards: Card[] = [];\n  display: Card[] = [];\n  path: Card[] = [];\n  json: string[];\n\n  closeResult = '';\n\n  edit: boolean = false;\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  private initForm() {\n    this.cards = [];\n    let newCard = new Card(this.cards.length, \"Title here\", [\"First point\", \"Second point\", \"Third point\"]);\n    this.cards.push(newCard);\n    this.display.push(newCard);\n  }\n\n  onAddCard() {\n    let newCard = new Card(this.cards.length, \"Title here\", [\"First point\", \"Second point\", \"Third point\"]);\n    this.cards.push(newCard);\n    this.display.push(newCard);\n  }\n\n  onAddChild(card: Card) {\n    let newCard = new Card(this.cards.length, \"Title here\", [\"First point\", \"Second point\", \"Third point\"]);\n    if (!card.childs) {\n      card.childs = [];\n    }\n    card.childs.push(newCard);\n\n  }\n\n  onEdit() {\n    this.edit = !this.edit;\n  }\n\n  onModifyCard() {\n\n  }\n\n  onRemoveCard(card: Card) {\n    for (let i = 0; i < this.cards.length; i++) {\n      if (this.cards[i] == card) {\n        this.cards.splice(i, 1);\n      }\n    }\n    for (let i = 0; i < this.display.length; i++) {\n      if (this.display[i] == card) {\n        this.display.splice(i, 1);\n      }\n    }\n    for (let i = 0; i < this.path.length; i++) {\n      if (this.path[i] == card) {\n        this.path.splice(i, 1);\n      }\n    }\n  }\n\n  onDepthSearch(card: Card) {\n    if (card.childs) {\n      this.path.push(card);\n      this.display = [];\n      for (let i = 0; i < card.childs.length; i++)\n        this.display.push(card.childs[i]);\n    }\n  }\n\n  onSearchCard(card: Card) {\n    this.display = [];\n    for (let i = 0; i < card.childs.length; i++)\n      this.display.push(card.childs[i]);\n  }\n\n  onChange(card : Card, value: string, type: number){\n    if (type == -1){\n    card.title = value;\n    }\n    else {\n      card.content[type] = value;\n    }\n  }\n\n  toJSON(){\n\n  }\n}\n\n","<header>\n    <nav class=\"navbar navbar-light bg-white justify-content-between\">\n        <div class=\"navbar-brand\">\n            <a class=\"navbar-brand align-self-center\" routerLink=\"/\">Valframe</a>\n        </div>\n\n        <div class=\"left justify-content-between\">\n            <div class=\"nav-item dropdown\">\n                <a class=\"btn btn-success px-3 py-2 dropbtn\">+</a>\n\n                <div class=\"dropdown-content\">\n                    <a (click)=\"onAddCard()\">Card</a>\n\n                    <div class=\"dropright-item dropright parent\">\n                        <a class=\"dropright-item dropright-toggle dropbtn\">Child card to</a>\n                        <div class=\"dropright-content\">\n                            <a class=\"dropright-item\" *ngFor=\"let card of display\"\n                                (click)=\"onAddChild(card)\">{{card.title}}</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <a class=\"btn btn-light mx-4 px-3 py-2\" (click)=\"onEdit()\" [ngClass]=\"{'edit-true': this.edit}\">Edit</a>\n        </div>\n\n        <a class=\"btn btn-outline-primary px-3 py-2\">Save</a>\n\n    </nav>\n</header>\n\n<div class=\"cont\">\n    <div class=\"path\">\n        <p class=\"path_text align-self-center\">\n            <a *ngFor=\"let i of path\" (click)=\"onSearchCard(this.i)\"> {{ i.title}} > </a>\n        </p>\n    </div>\n    <div class=\"card-columns\">\n        <div class=\"justify-content-center\">\n\n            <a *ngFor=\"let card of display\" [ngClass]=\"{'static-card': this.edit || !card.childs}\"\n                (click)=\"onDepthSearch(card)\">\n                <div class=\"card mx-auto mb-3\" id=\"card\">\n                    <div class=\"remove mx-1 my-1 float-right\">\n                        <a *ngIf=\"this.edit\" class=\"btn btn-danger py-0 px-2\" (click)=\"onRemoveCard(card)\">-</a>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"card-text\">\n\n                            <div class=\"title\">\n                                <input #box class=\"card-title text-center font-weight-normal editing\"\n                                    (change)=\"onChange(card,box.value,-1)\" *ngIf=\"this.edit\" placeholder=\"Title here\"\n                                    value=\"{{card.title}}\">\n                                <h5 class=\"card-title text-center font-weight-normal inediting\" *ngIf=\"!this.edit\">\n                                    {{card.title}}</h5>\n                            </div>\n\n                            <div *ngIf=\"!this.edit\" class=\"points\">\n                                <li class=\"card-text text-left inediting\" *ngFor=\"let point of card.content\">{{point}}\n                                </li>\n                            </div>\n                            <div *ngIf=\"this.edit\" class=\"points\">\n                                <li class=\"card-text text-left inediting\" *ngFor=\"let point of card.content\">\n                                    <input #box class=\"card-text text-left editing\"\n                                        (change)=\"onChange(card,box.value,box.id)\" placeholder=\"Content here\"\n                                        value=\"{{point}}\">\n                                </li>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </div>\n    </div>\n\n</div>","import {Pipe, PipeTransform} from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser'; \n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n \n  constructor(private sanitizer: DomSanitizer) {\n  }\n \n  public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    switch (type) {\n\t\t\tcase 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script': return this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault: throw new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n  }\n \n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataService } from '../services/data/data.service';\nimport { SafeHtmlPipe } from '../home/SafeHtml.pipe';\nimport {trigger, style, animate, transition} from '@angular/animations';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  animations: [\n    trigger('fade', [ \n      transition('void => *', [\n        style({ opacity: 0 }), \n        animate(250, style({opacity: 1}))\n      ]) \n    ])\n  ]\n\n})\n\nexport class HomeComponent implements OnInit {\n\n  keys = [];\n  path = [];\n\n  constructor(public router: Router,\n    private dataService: DataService,\n    public safeHtml : SafeHtmlPipe) { }\n\n  ngOnInit(): void {\n    this.firstParse();\n  }\n  firstParse() {\n    this.path = [];\n    this.keys = [];\n    this.dataService.getJSON().subscribe(response => {\n      this.keys.push(response.infos);\n    }, error => {\n      console.log(\"error on the parse\");\n    });\n  }\n\n  extractKeys(response: any) {\n    for (let x in response) {\n      this.keys.push(response[x]);\n    }\n  }\n\n  switchKey(key) {\n    if (key.child != \"null\") {\n      this.path.push(key);\n      this.keys = [];\n      this.extractKeys(key.child);\n    }\n  }\n\n  searchKey(key) {\n    this.keys = [];\n    if (this.path.length == 1) {\n      this.firstParse();\n    }\n    else {\n      for (let i = 0; i < this.path.length; i++) {\n        if (this.path[i] == key) {\n          this.path = this.path.slice(0, i + 1);\n          this.extractKeys(key.child);\n        }\n      }\n    }\n  }\n\n  logOut() {\n    this.router.navigate(['/login']);\n  }\n}\n","<div class=\"body\">\n    <header>\n        <nav class=\"navbar navbar-light bg-white justify-content-between\">\n            <div class=\"\">\n                <a *ngIf=\"this.path.length > 0\" class=\"btn btn-light mr-2 back\"\n                    (click)=\"searchKey(this.path[this.path.length-2])\">Previous</a>\n                <!-- <a class=\"btn btn-light\" routerLink=\"/newDoc\">+</a> -->\n            </div>\n            <div class=\"navbar-brand\">\n                <a class=\"navbar-brand align-self-center\" (click)=\"firstParse()\">Valframe</a>\n            </div>\n            <div class=\"nav-item\"><a (click)=\"logOut()\" class=\"btn btn-white auth\" disabled></a></div>\n        </nav>\n    </header>\n    <div class=\"row cont\">\n        <div class=\"col-3 summary\" *ngIf=\"this.path.length == -1\">\n            <li *ngFor=\"let key of keys\"><a [ngClass]=\"{'disabled' : key.child === 'null',\n            'abled': key.child!=='null'}\" (click)=\"switchKey(this.key)\">{{key.value}}</a>\n            </li>\n        </div>\n        <div class=\"col view mx-2\">\n            <div class=\"path\">\n                <p class=\"path_text align-self-center\">\n                    <a *ngFor=\"let i of path\" (click)=\"searchKey(this.i)\"> {{ i.value }} > </a>\n                </p>\n            </div>\n\n            <div class=\"card-columns\">\n                <div class=\"justify-content-center\">\n                    <a @fade *ngFor=\"let key of keys\" [ngClass]=\"{'disabled' : key.child === 'null',\n            'abled': key.child!=='null'}\" (click)=\"switchKey(this.key)\">\n                        <div class=\"card mx-auto mb-3\" id=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"card-text\">\n                                    <h5 class=\"card-title text-center font-weight-normal\"\n                                        [innerHTML]=\"key.value | safeHtml : 'html'\"></h5>\n                                    <li class=\"card-text text-left\" *ngFor=\"let i of key.desc.value\"\n                                        [innerHTML]=\"i | safeHtml : 'html'\">\n                                    </li>\n                                </div>\n                            </div>\n                        </div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private jsonURL = '../assets/ValueFramework.json';\n\n  constructor(private http: HttpClient){\n  }\n\n  public getJSON(): Observable<any> {\n    return this.http.get(this.jsonURL);\n  }\n\n  public pushJSON(){}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export class Card {\n    constructor(\n        public id: number,\n        public title: string,\n        public content?: string[],\n        public childs?: Card[]\n        ) { }\n}\n"]}