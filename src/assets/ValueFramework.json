{
  "infos": {
    "value": "Value Framework",
    "desc": {
      "value": [
        "Version 1.2",
        "Release Date : 2020"
      ]
    },
    "child": [
      {
        "value": "Value Drivers",
        "desc": {
          "value": [
            "These are the things that the prospect is likely proactively looking for or needing.",
            "These are generally revenue, cost, or risk related.",
            "These are top-of-mind customer topics that exist even if GitLab doesnâ€™t.",
            "They could cause a buyer to re-allocate discretionary funds.",
            "They support a value-based conversation (mutually exclusive, collectively exhaustive)."
          ]
        },
        "child": [
          {
            "value": "Increase Operational Efficiencies",
            "desc": {
              "value": ["Simplify the software development toolchain to reduce total cost of ownership"]
            },
            "child": [
              {
                "value": "Before",
                "desc": {
                  "value": [
                    "Process - manual; complex",
                    "Tools - don't scale; too many; legacy; custom; homegrow; outages",
                    "People - functional silos; misaligned priorities; working on wrong things; fighting fires; dissatisfied",
                    "Integrations - brittle; complicated"
                  ]
                },
                "child": "null"
              },
              {
                "value": "Negative Consequences",
                "desc": {
                  "value": [
                    "Lower productivity; more rework; slower cycle time",
                    "Toolchain is expensive to license and support",
                    "Poor developer experience; wasted talent; high turnover in engineering",
                    "Product launch delays"
                  ]
                },
                "child": "null"
              },
              {
                "value": "After",
                "desc": {
                  "value": [
                    "Process - simplified, predictable SDLC process; less ramp time; reduced context switching",
                    "Tools - scale with business and developer needs; more complete coverage; no customization",
                    "People - teams are more productive and collaborative",
                    "Integrations - fewer; less complicated"
                  ]
                },
                "child": "null"
              },
              {
                "value": "Positive Business Outcomes",
                "desc": {
                  "value": [
                    "Reduce product development and delivery costs",
                    "Elimination of bottlenecks leads to agility and faster time to market",
                    "Happy developers - attract and retain top talent",
                    "Move engineers from integration and maintenance to value-add activities"
                  ]
                },
                "child": "null"
              },
              {
                "value": "Required Capabilities",
                "desc": {
                  "value": [
                    "Consistent and efficient developer experience across the development lifecycle",
                    "Centralized reporting and visibility across the development lifecycle",
                    "At point of code change, developers can assess and resolve security, compliance and code quality issues",
                    "Solution that automatically scales to match performance and cost demands of the organization",
                    "Public cloud independent; develop in one place, deploy anywhere",
                    "SaaS and/or self-managed"
                  ]
                },
                "child": "null"
              },
              {
                "value": "Metrics",
                "desc": {
                  "value": [
                    "Lower costs (license, FTEs and compute) of development",
                    "Increase developer/team productivity",
                    "Reduce cycle time (lead time)",
                    "Increase deployment frequency",
                    "Reduce change failure rate",
                    "Reduce MTTR (mean time to recover/restore)",
                    "Improve developer satisfaction and retention"
                  ]
                },
                "child": "null"
              },
              {
                "value": "How we do it",
                "desc": {
                  "value": []
                },
                "child": [
                  {
                    "value": "Complete DevOps Platform",
                    "desc": {
                      "value": [
                        "Start with GitLab just on the use case that you need to improve",
                        "Increase developer/team productivity",
                        "Reduce cycle time (lead time)",
                        "Increase deployment frequency",
                        "Reduce change failure rate",
                        "Reduce MTTR (mean time to recover/restore)",
                        "Improve developer satisfaction and retention"
                      ]
                    },
                    "child": "null"
                  }
                ]
              }
            ]
          },
          {
            "value": "Deliver Better Products Faster",
            "desc": {
              "value": ["Accelerate the software delivery process to meet business objectives"]
            },
            "child": [
              {
                "value": "Before",
                "desc": {
                  "value": [
                    "Fragmented processes and tools - multiple tools and toolchains; inefficient integrations",
                    "Frustrated teams - complex processes and tools get in the way of results",
                    "No visibility - siloed teams",
                    "Poor collaboration and communication",
                    "Making mistakes - bugs caught late in development or after shipping to production",
                    "Bottlenecks - waiting for security; compliance; quality checks; manual processes; infrastructure"
                  ]
                },
                "child": "null"
              },
              {
                "value": "Negative Consequences",
                "desc": {
                  "value": [
                    "Poor velocity (i.e., infrequent deploys/releases); lost market share",
                    "Unable to recruit and retain top talent in engineering, security and operations",
                    "Poor business agility; unable to capture new opportunities and get market feedback",
                    "Poor quality; lost customers and revenue"
                  ]
                },
                "child": "null"
              },
              {
                "value": "After",
                "desc": {
                  "value": [
                    "Streamline processes and tools - security and quality without sacrifice, continuous delivery",
                    "Happy developers - modern software development, contributing to the business, quick feedback",
                    "Control and visibility - able to measure and improve cycle time",
                    "Seamless collaboration - digitally dissolve silos, teams aligned to outcomes",
                    "Security and quality shift left - find and resolve bugs early in the lifecycle",
                    "Responsive - more connected to customers/market"
                  ]
                },
                "child": "null"
              },
              {
                "value": "Positive Business Outcomes",
                "desc": {
                  "value": [
                    "Increase market share and revenue",
                    "Attract, retain and enable top talent",
                    "Increase developer productivity and velocity; faster DevOps lifecycle; maintain quality and security standards",
                    "Disrupt the competition; increased innovation; more expansive product roadmap"
                  ]
                },
                "child": "null"
              },
              {
                "value": "Required Capabilities",
                "desc": {
                  "value": [
                    "Ability to work in parallel and not have to wait on other teams",
                    "Centralized reporting and visibility across the lifecycle",
                    "Developers can quickly fix their own problems with immediate and precise pipeline feedback",
                    "Solution that automatically scales to match performance and cost demands of the organization",
                    "Software that makes testing early and often the path of least resistance"
                  ]
                },
                "child": "null"
              },
              {
                "value": "Metrics",
                "desc": {
                  "value": [
                    "Improve revenue, # of customers, and/or market share",
                    "Increase developer/team productivity",
                    "Reduce cycle time (lead time)",
                    "Increase deployment frequency",
                    "Reduce change failure rate",
                    "Reduce MTTR (mean time to recover/restore)"
                  ]
                },
                "child": "null"
              }
            ]
          },
          {
            "value": "Reduce Security and Compliance Risk",
            "desc": {
              "value": ["Simplify processes to comply with internal processes, controls and industry regulations without compromising speed"]
            },
            "child": [
              {
                "value": "Before",
                "desc": {
                  "value": [
                    "Unsatisfying tradeoffs - security and compliance versus speed",
                    "No traceability - unsure who changed what, when and why",
                    "Uncertainty - unable to know whether teams are doing enough early enough",
                    "Lack of visibility - inability to assess risk across the DevOps lifecycle",
                    "Complexity - fragile collection of disparate tools and manual work result in information and process silos",
                    "Periodic crisis - security breaches, audit failures, discovered vulnerabilities"
                  ]
                },
                "child": "null"
              },
              {
                "value": "Negative Consequences",
                "desc": {
                  "value": [
                    "Poor velocity (i.e., infrequent deploys/releases); lost market share",
                    "Unable to recruit and retain top talent in engineering, security and operations",
                    "Poor business agility; unable to capture new opportunities and get market feedback",
                    "Poor quality; lost customers and revenue"
                  ]
                },
                "child": "null"
              },
              {
                "value": "After",
                "desc": {
                  "value": [
                    "Streamline processes and tools - security and quality without sacrifice, continuous delivery",
                    "Happy developers - modern software development, contributing to the business, quick feedback",
                    "Control and visibility - able to measure and improve cycle time",
                    "Seamless collaboration - digitally dissolve silos, teams aligned to outcomes",
                    "Security and quality shift left - find and resolve bugs early in the lifecycle",
                    "Responsive - more connected to customers/market"
                  ]
                },
                "child": "null"
              },
              {
                "value": "Positive Business Outcomes",
                "desc": {
                  "value": [
                    "Increase market share and revenue",
                    "Attract, retain and enable top talent",
                    "Increase developer productivity and velocity; faster DevOps lifecycle; maintain quality and security standards",
                    "Disrupt the competition; increased innovation; more expansive product roadmap"
                  ]
                },
                "child": "null"
              },
              {
                "value": "Required Capabilities",
                "desc": {
                  "value": [
                    "Ability to work in parallel and not have to wait on other teams",
                    "Centralized reporting and visibility across the lifecycle",
                    "Developers can quickly fix their own problems with immediate and precise pipeline feedback",
                    "Solution that automatically scales to match performance and cost demands of the organization",
                    "Software that makes testing early and often the path of least resistance"
                  ]
                },
                "child": "null"
              },
              {
                "value": "Metrics",
                "desc": {
                  "value": [
                    "Improve revenue, # of customers, and/or market share",
                    "Increase developer/team productivity",
                    "Reduce cycle time (lead time)",
                    "Increase deployment frequency",
                    "Reduce change failure rate",
                    "Reduce MTTR (mean time to recover/restore)"
                  ]
                },
                "child": "null"
              }
            ]
          }
        ]
      },
      {
        "value": "Differenciators",
        "desc": {
          "value": [
            "They can influence a technical buyerâ€™s decision criteria through Required Capabilities.",
            "Each Differentiator contains a Description, Customer Value, Defensibility and Trap-Setting.",
            "Unique â€“ Not available from any other vendor. Leading products or services that only GitLab can provide.",
            "Comparative â€“ Superior attributes when compared to other companies, often feature or service-based.",
            "Holistic â€“ Attributes of GitLab that would make a customer feel good about doing business with us."
          ]
        }
      }
    ]
  }
}