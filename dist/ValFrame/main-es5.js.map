{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/services/auth/auth-guard.service.ts","webpack:///src/app/services/auth/auth.service.ts","webpack:///src/app/services/data/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","router","dataService","title","path","disabled","firstParse","getJSON","subscribe","response","push","infos","error","console","log","x","child","key","extractKeys","i","length","slice","selector","templateUrl","styleUrls","appRoutes","component","redirectTo","pathMatch","routerOptions","anchorScrolling","scrollPositionRestoration","AppModule","forRoot","declarations","imports","providers","bootstrap","AuthComponent","authService","formBuilder","initForm","signInForm","group","email","required","password","pattern","get","value","AuthGuardService","providedIn","AuthService","DataService","http","jsonURL","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACOQ;;AACI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAc;;AAC9C;;AAAkB;;AAAE;;AACxB;;;;;;AAFoC;;AAAA;;;;;;AAWhB;;AAAgE;;AAAK;;;;;;AAAL;;AAAA;;;;;;;;;;;;;;AANhF;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AACI;;AACI;;AACI;;AAAmC;;AAAa;;AAChD;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;AAV4B;;AAKuB;;AAAA;;AACJ;;AAAA;;;;QDV9CC,Y;AAOX,4BAAoBC,MAApB,EACUC,WADV,EACoC;AAAA;;AADhB,aAAAD,MAAA,GAAAA,MAAA;AACV,aAAAC,WAAA,GAAAA,WAAA;AAPV,aAAAC,KAAA,GAAQ,UAAR;AAEA,aAAAP,IAAA,GAAO,EAAP;AACA,aAAAQ,IAAA,GAAO,EAAP;AACA,aAAAC,QAAA,GAAoB,KAApB;AAGuC;;;;mCAE/B;AACN,eAAKC,UAAL;AACD;;;qCAEY;AAAA;;AACX,eAAKD,QAAL,GAAgB,KAAhB;AACA,eAAKD,IAAL,GAAY,EAAZ;AACA,eAAKR,IAAL,GAAY,EAAZ;AACA,eAAKM,WAAL,CAAiBK,OAAjB,GAA2BC,SAA3B,CAAqC,UAAAC,QAAQ,EAAI;AAC/C,iBAAI,CAACb,IAAL,CAAUc,IAAV,CAAeD,QAAQ,CAACE,KAAxB;AACD,WAFD,EAEG,UAAAC,KAAK,EAAI;AACVC,mBAAO,CAACC,GAAR,CAAY,OAAZ;AACD,WAJD;AAKD;;;oCAEWL,Q,EAAe;AACzB,eAAK,IAAIM,CAAT,IAAcN,QAAd,EAAwB;AACtB,iBAAKb,IAAL,CAAUc,IAAV,CAAeD,QAAQ,CAACM,CAAD,CAAvB;;AACA,gBAAIN,QAAQ,CAACM,CAAD,CAAR,CAAYC,KAAZ,IAAmB,MAAvB,EAA8B;AAC5B,mBAAKX,QAAL,GAAgB,IAAhB;AACD,aAFD,MAGI;AACF,mBAAKA,QAAL,GAAgB,KAAhB;AACD;AACF;AACF;;;kCAESY,G,EAAK;AACb,eAAKb,IAAL,CAAUM,IAAV,CAAeO,GAAf;AACA,eAAKrB,IAAL,GAAY,EAAZ;AACA,eAAKsB,WAAL,CAAiBD,GAAG,CAACD,KAArB;AACD;;;kCAESC,G,EAAK;AACb,eAAKrB,IAAL,GAAY,EAAZ;;AACA,eAAK,IAAIuB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKf,IAAL,CAAUgB,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,gBAAI,KAAKf,IAAL,CAAUe,CAAV,KAAgBF,GAApB,EAAyB;AACvB,mBAAKb,IAAL,GAAY,KAAKA,IAAL,CAAUiB,KAAV,CAAgB,CAAhB,EAAmBF,CAAC,GAAG,CAAvB,CAAZ;AACA,mBAAKD,WAAL,CAAiBD,GAAG,CAACD,KAArB;AACD;AACF;AACF;;;;;;;uBAnDUhB,Y,EAAY,uH,EAAA,wI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,0mB;AAAA;AAAA;ACTzB;;AACI;;AACI;;AAAwB;AAAA,mBAAS,IAAAM,UAAA,EAAT;AAAqB,WAArB;;AAAuB;;AAAQ;;AAC3D;;AACJ;;AAEI;;AACI;;AAIJ;;AACI;;AACI;;AAWJ;;AAER;;AACI;;AAA0C;;AAAgB;;AAC9D;;;;AArBa;;AAAA;;AAME;;AAAA;;;;;;;;;sEDJFN,Y,EAAY;cALxB,uDAKwB;eALd;AACTsB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;AETzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWA,QAAMC,SAAS,GAAW,CACxB;AAAErB,UAAI,EAAE,MAAR;AAAgBsB,eAAS,EAAE;AAA3B,KADwB,EAExB;AAAEtB,UAAI,EAAE,EAAR;AAAYuB,gBAAU,EAAE,UAAxB;AAAoCC,eAAS,EAAE;AAA/C,KAFwB,EAGxB;AAAExB,UAAI,EAAE,IAAR;AAAcuB,gBAAU,EAAE;AAA1B,KAHwB,CAA1B;AAMA,QAAME,aAAa,GAAiB;AAClCC,qBAAe,EAAE,SADiB;AAElCC,+BAAyB,EAAE;AAFO,KAApC;;QAsBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAPT,CACT,uEADS,EAET,kFAFS,EAGT,uEAHS,C;AAIV,gBATQ,CACP,qEADO,EAEP,uEAFO,EAGP,6DAAaC,OAAb,CAAqBR,SAArB,CAHO,CASR;;;;0HAGUO,S,EAAS;AAAA,uBAflB,2DAekB,EAdlB,kEAckB;AAdL,kBAGb,qEAHa,EAIb,uEAJa,EAIA,4DAJA;AAcK,O;AAVL,K;;;;;sEAUJA,S,EAAS;cAjBrB,sDAiBqB;eAjBZ;AACRE,sBAAY,EAAE,CACZ,2DADY,EAEZ,kEAFY,CADN;AAKRC,iBAAO,EAAE,CACP,qEADO,EAEP,uEAFO,EAGP,6DAAaF,OAAb,CAAqBR,SAArB,CAHO,CALD;AAURW,mBAAS,EAAE,CACT,uEADS,EAET,kFAFS,EAGT,uEAHS,CAVH;AAeRC,mBAAS,EAAE,CAAC,2DAAD;AAfH,S;AAiBY,Q;;;;;;;;;;;;;;;;;;ACvCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,a;AAMX,6BAAoBrC,MAApB,EACUsC,WADV,EAEUC,WAFV,EAEoC;AAAA;;AAFhB,aAAAvC,MAAA,GAAAA,MAAA;AACV,aAAAsC,WAAA,GAAAA,WAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AAA6B;;;;mCAE/B;AACN,eAAKC,QAAL;AACD;;;mCAEkB;AACjB,eAAKC,UAAL,GAAkB,KAAKF,WAAL,CAAiBG,KAAjB,CAAuB;AACvCC,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWD,KAAjC,CAAL,CADgC;AAEvCE,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,EAAsB,0DAAWE,OAAX,CAAmB,iBAAnB,CAAtB,CAAL;AAF6B,WAAvB,CAAlB;AAKD;;;mCAEU;AACT,cAAMH,KAAK,GAAG,KAAKF,UAAL,CAAgBM,GAAhB,CAAoB,OAApB,EAA6BC,KAA3C;AACA,cAAMH,QAAQ,GAAG,KAAKJ,UAAL,CAAgBM,GAAhB,CAAoB,UAApB,EAAgCC,KAAjD,CAFS,CAIT;AACA;AACA;AACA;AACD;;;;;;;uBA9BUX,a,EAAa,uH,EAAA,wI,EAAA,2H;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,2D;AAAA;;;;;sEAAbA,a,EAAa;cALzB,uDAKyB;eALf;AACThB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKa0B,gB,GAEX,4BAAc;AAAA;AAAG,K;;;uBAFNA,gB;AAAgB,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACVC,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;ACL7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,W,GAEX,uBAAc;AAAA;AAAG,K;;;uBAFNA,W;AAAW,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVD,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;ACLxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaE,W;AAIX,2BAAoBC,IAApB,EAAoC;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAFZ,aAAAC,OAAA,GAAU,+BAAV;AAGP;;;;kCAEa;AACZ,iBAAO,KAAKD,IAAL,CAAUN,GAAV,CAAc,KAAKO,OAAnB,CAAP;AACD;;;;;;;uBATUF,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVF,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACPxB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMK,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI9C,OAAO,CAACD,KAAR,CAAc+C,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataService } from './services/data/data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ValFrame';\n\n  keys = [];\n  path = [];\n  disabled: boolean = false;\n\n  constructor(private router: Router,\n    private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.firstParse();\n  }\n\n  firstParse() {\n    this.disabled = false;\n    this.path = [];\n    this.keys = [];\n    this.dataService.getJSON().subscribe(response => {\n      this.keys.push(response.infos);\n    }, error => {\n      console.log(\"error\");\n    });\n  }\n\n  extractKeys(response: any) {\n    for (let x in response) {\n      this.keys.push(response[x]);\n      if (response[x].child==\"null\"){\n        this.disabled = true;\n      }\n      else{\n        this.disabled = false;\n      }\n    }\n  }\n\n  switchKey(key) {\n    this.path.push(key);\n    this.keys = [];\n    this.extractKeys(key.child);\n  }\n\n  searchKey(key) {\n    this.keys = [];\n    for (let i = 0; i < this.path.length; i++) {\n      if (this.path[i] == key) {\n        this.path = this.path.slice(0, i + 1);\n        this.extractKeys(key.child);\n      }\n    }\n  }\n}\n","<header>\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a class=\"navbar-brand\" (click)=\"firstParse()\">ValFrame</a>\n    </nav>\n</header>\n\n    <div class=\"path\">\n        <div *ngFor=\"let i of path\" class=\"path_text\">\n            <a (click)=\"searchKey(this.i)\"> {{ i.value }} </a>\n            <p class=\"arrow\"> > </p>\n        </div>\n    </div>\n        <div class=\"card-columns justify-content-center\">\n            <a *ngFor=\"let key of keys\" [ngStyle]=\"{'pointer-events':disabled===true ? 'none' : 'auto'}\"\n                (click)=\"switchKey(this.key)\">\n                <div class=\"col-md card mx-auto mb-3\" id=\"card\">\n                    <div class=\"card-body\">\n                        <div class=\"card-text\">\n                            <h5 class=\"card-title text-center\">{{key.value}}</h5>\n                            <p class=\"card-text text-left\" *ngFor=\"let i of key.desc.value\">{{i}}</p>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </div>\n\n<footer class=\"bg-light py-5\">\n    <div class=\"small text-center text-muted\">Copyright © 2020</div>\n</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routes, ExtraOptions, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { AuthService } from './services/auth/auth.service';\nimport { AuthGuardService } from './services/auth/auth-guard.service';\nimport { DataService } from './services/data/data.service';\n\nconst appRoutes: Routes = [\n  { path: 'auth', component: AuthComponent },\n  { path: '', redirectTo: 'app-root', pathMatch: 'full' },\n  { path: '**', redirectTo: 'app-root' }\n];\n\nconst routerOptions: ExtraOptions = {\n  anchorScrolling: 'enabled',\n  scrollPositionRestoration: 'enabled'\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [\n    AuthService,\n    AuthGuardService,\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from '../services/auth/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  signInForm: FormGroup;\n\n  errorMessage: string;\n\n  constructor(private router: Router,\n    private authService: AuthService,\n    private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  private initForm() {\n    this.signInForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.pattern(/[0-9a-zA-Z]{6,}/)]],\n\n    })\n  }\n\n  onSignIn() {\n    const email = this.signInForm.get('email').value;\n    const password = this.signInForm.get('password').value;\n\n    // this.authService.signInUser(email, password).then(\n    //   () => { this.router.navigate(['/main']); },\n    //   (error) => { this.errorMessage = error; }\n    // )\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private jsonURL = '../assets/ValueFramework.json';\n\n  constructor(private http: HttpClient){\n  }\n\n  public getJSON(): Observable<any> {\n    return this.http.get(this.jsonURL);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}